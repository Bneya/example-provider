name: Build

#  This workflow is the Provider's CI build that will run on every commit for the provider codebase

on:
  push:
    branches:
      - master
  workflow_dispatch:
  pull_request:

# To be able to cancel the provider run if the consumer runs
concurrency:
  group: pact-testing
  cancel-in-progress: true

env:
  PACT_BROKER_BASE_URL: ${{ vars.PACT_BROKER_BASE_URL }}
  PACT_BROKER_USERNAME: ${{ vars.PACT_BROKER_USERNAME }}
  PACT_BROKER_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }}
  # GITHUB_REF: ${{ github.ref }}
  PACT_BROKER_PUBLISH_VERIFICATION_RESULTS: true
  GIT_COMMIT: ${{ github.sha }}
  GIT_BRANCH: ${{ github.head_ref || github.ref_name }}
  ENVIRONMENT: production
  PROVIDERS: pactflow-example-provider
  PACT_CLI: docker run
    --rm -v ${PWD}:${PWD}
    -e PACT_BROKER_BASE_URL=${{ vars.PACT_BROKER_BASE_URL }}
    -e PACT_BROKER_USERNAME=${{ vars.PACT_BROKER_USERNAME }}
    -e PACT_BROKER_PASSWORD=${{ secrets.PACT_BROKER_PASSWORD }}
    pactfoundation/pact-cli:latest

jobs:
  # check-consumer-running:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     is_consumer_runing: ${{ steps.check_consumer.outputs.is_running }}
  #   steps:
  #     - name: Check if consumer testing is running
  #       id: check_consumer
  #       uses: actions/github-script@v5
  #       with:
  #         github-token: ${{ secrets.GH_PAT }}
  #         script: |
  #           const { data } = await github.rest.actions.listWorkflowRuns({
  #             owner: context.repo.owner,
  #             repo: 'example-consumer', // context.repo.repo,
  #             workflow_id: 'build.yml', // AsegÃºrate de usar el ID o nombre correcto de tu workflow
  #             status: 'in_progress'
  #           });
  #           if(data.total_count > 0) {
  #             core.setOutput('is_running', true);
  #           } else {
  #             core.setOutput('is_running', false);
  #           }

  #     - name: Skiping execution as consumer is running
  #       if: steps.check_consumer.outputs.is_running == 'true'
  #       run: echo "Consumer is running, skipping execution."

  check-consumer-modified:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch branches
        run: |
          git fetch origin +refs/heads/*:refs/remotes/origin/* 
      - name: Check for modifications in *.consumer.pact.spec.ts files
        id: check_modifications
        run: |
          if git diff --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }} | grep -q '.*\.consumer\.pact\.spec\.ts'; then
            echo "::set-output name=consumer_files_modified::true"
            echo "consumer modified"
          else
            echo "::set-output name=consumer_files_modified::false"
            echo "consumer not modified"
          fi
          echo consumer_files_modified ::consumer_files_modified
      - name: Abort if any *.consumer.pact.spec.ts was modified
        if: steps.check_modifications.outputs.consumer_files_modified == 'true'
        run: |
          echo "*.consumer.yaml was modified, aborting workflow."
          exit 1
          
    
  test:
    # if: needs.check-consumer-running.outputs.is_consumer_runing == 'false'
    runs-on: ubuntu-latest
    needs: check-consumer-modified
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: yarn

      - name: Test
        run: yarn test

  # Runs on branches as well, so we know the status of our PRs
  can-i-deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - run: docker pull pactfoundation/pact-cli:latest

      - name: Determine environment
        run: |
          if [[ "${{ env.GIT_BRANCH }}" == "master" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          elif [[ "${{ env.GIT_BRANCH }}" == "development" ]]; then
            echo "ENVIRONMENT=qa" >> $GITHUB_ENV
          fi

      - name: Can I deploy? (valida todos los providers)
        run: |
          for provider in ${{  env.PROVIDERS }}
          do
            ${{ env.PACT_CLI }} broker can-i-deploy \
              --pacticipant $provider \
              --version ${{ env.GIT_COMMIT }} \
              --to-environment ${{ env.ENVIRONMENT }} \
              --retry-while-unknown 30 \
              --retry-interval 10
          done

  # Only deploy from master
  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: can-i-deploy
    steps:
      - uses: actions/checkout@v3
      - run: docker pull pactfoundation/pact-cli:latest

      - name: Determine environment
        run: |
          if [[ "${{ env.GIT_BRANCH }}" == "master" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          elif [[ "${{ env.GIT_BRANCH }}" == "development" ]]; then
            echo "ENVIRONMENT=qa" >> $GITHUB_ENV
          fi

      - name: Deploy
        run: |
          for provider in ${{  env.PROVIDERS }}
          do
            ${{ env.PACT_CLI }} broker record_deployment \
            --pacticipant $provider \
            --version ${{ env.GIT_COMMIT }} \
            --environment ${{ env.ENVIRONMENT }}
          done
