name: Build

#  This workflow is the Provider's CI build that will run on every commit for the provider codebase

on:
  push:
    branches:
      - master
  workflow_dispatch:
  pull_request:

env:
  PACT_BROKER_BASE_URL: ${{ vars.PACT_BROKER_BASE_URL }}
  PACT_BROKER_USERNAME: ${{ vars.PACT_BROKER_USERNAME }}
  PACT_BROKER_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }}
  # GITHUB_REF: ${{ github.ref }}
  PACT_BROKER_PUBLISH_VERIFICATION_RESULTS: true
  GIT_COMMIT: ${{ github.sha }}
  GIT_BRANCH: ${{ github.head_ref || github.ref_name }}
  ENVIRONMENT: production
  PROVIDERS: pactflow-example-provider
  PACT_CLI: docker run
    --rm -v ${PWD}:${PWD}
    -e PACT_BROKER_BASE_URL=${{ vars.PACT_BROKER_BASE_URL }}
    -e PACT_BROKER_USERNAME=${{ vars.PACT_BROKER_USERNAME }}
    -e PACT_BROKER_PASSWORD=${{ secrets.PACT_BROKER_PASSWORD }}
    pactfoundation/pact-cli:latest

jobs:
  check-consumer-modified:
    runs-on: ubuntu-latest
    outputs:
      consumer_files_modified: ${{ steps.check_modifications.outputs.consumer_files_modified }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        
      - name: Fetch branches if PR
        if: github.event_name == 'pull_request'
        run: git fetch origin +refs/heads/*:refs/remotes/origin/*

      # Comparamos modificaciones para caso PR y para push
      - name: Check for modifications in *.consumer.pact.spec.ts files
        id: check_modifications
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            DIFF_BASE="origin/${{ github.base_ref }}...origin/${{ github.head_ref }}"
          else
            DIFF_BASE="${{ github.event.before }}...${{ github.sha }}"
          fi
          if git diff --name-only $DIFF_BASE | grep -q '.*\.consumer\.pact\.spec\.ts'; then
            echo "consumer_files_modified=true" >> $GITHUB_OUTPUT
            echo "consumer files were modified. Aborting"
          else
            echo "consumer_files_modified=false" >> $GITHUB_OUTPUT
            echo "consumer not modified. Continuing"
          fi          
    
  test:
    if: needs.check-consumer-modified.outputs.consumer_files_modified == 'false'
    runs-on: ubuntu-latest
    needs: check-consumer-modified
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: yarn

      - name: Test
        run: yarn test

  # Runs on branches as well, so we know the status of our PRs
  can-i-deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - run: docker pull pactfoundation/pact-cli:latest

      - name: Determine environment
        run: |
          if [[ "${{ env.GIT_BRANCH }}" == "master" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          elif [[ "${{ env.GIT_BRANCH }}" == "development" ]]; then
            echo "ENVIRONMENT=qa" >> $GITHUB_ENV
          fi

      - name: Can I deploy? (valida todos los providers)
        run: |
          for provider in ${{  env.PROVIDERS }}
          do
            ${{ env.PACT_CLI }} broker can-i-deploy \
              --pacticipant $provider \
              --version ${{ env.GIT_COMMIT }} \
              --to-environment ${{ env.ENVIRONMENT }} \
              --retry-while-unknown 30 \
              --retry-interval 10
          done

  # Only deploy from master
  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: can-i-deploy
    steps:
      - uses: actions/checkout@v3
      - run: docker pull pactfoundation/pact-cli:latest

      - name: Determine environment
        run: |
          if [[ "${{ env.GIT_BRANCH }}" == "master" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          elif [[ "${{ env.GIT_BRANCH }}" == "development" ]]; then
            echo "ENVIRONMENT=qa" >> $GITHUB_ENV
          fi

      - name: Deploy
        run: |
          for provider in ${{  env.PROVIDERS }}
          do
            ${{ env.PACT_CLI }} broker record_deployment \
            --pacticipant $provider \
            --version ${{ env.GIT_COMMIT }} \
            --environment ${{ env.ENVIRONMENT }}
          done
